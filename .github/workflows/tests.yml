name: Tests

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      # Use GitHub's Docker registry to cache intermediate layers
      - run: echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
      - run: docker pull docker.pkg.github.com/$GITHUB_REPOSITORY/aleph-message-build-cache || true

      - name: Build the Docker image
        run: |
          git fetch --prune --unshallow --tags
          docker build . -t aleph-message:${GITHUB_REF##*/} -f Dockerfile --cache-from=docker.pkg.github.com/$GITHUB_REPOSITORY/aleph-message-build-cache

      - name: Cache the image on GitHub's repository
        run: docker tag aleph-message:${GITHUB_REF##*/} docker.pkg.github.com/$GITHUB_REPOSITORY/aleph-message-build-cache && docker push docker.pkg.github.com/$GITHUB_REPOSITORY/aleph-message-build-cache || true

      - name: Test with black in the Docker image
        run: |
          docker run aleph-message:${GITHUB_REF##*/} black --check aleph_message

      - name: Test with ruff in the Docker image
        run: |
          docker run aleph-message:${GITHUB_REF##*/} ruff aleph_message

      - name: Pytest in the Docker image
        run: |
          docker run aleph-message:${GITHUB_REF##*/} pytest -vv --cov aleph_message

      - name: MyPy in the Docker image
        run: |
          docker run aleph-message:${GITHUB_REF##*/} mypy aleph_message --install-types --non-interactive --check-untyped-defs --ignore-missing-imports
